package io.sarl.demos.basic

import io.sarl.core.Initialize

capacity CapTest1 {
	def func1 : int
}

capacity CapTest2 extends CapTest1 {
	def func2(a : int)
}

agent AbstractSyntaxAgent {
	uses CapTest1
	
	on Initialize {
		
	}
	
}

skill MySkill implements CapTest2 {
	def func1 : int {
		return 34
	}
	def func2(a : int) {
		System.out.println(a * 34)
	}
}

agent SyntaxExample extends AbstractSyntaxAgent {

	uses CapTest2
	
	on Initialize {
		setSkill(CapTest2, new MySkill)
		func2(func1)
	} 
	
	def standard(a : int, b : char) {
		System.out.println("a="+a)
		System.out.println("b="+b)
	}

	def varargs(a : int, b : char*) {
		System.out.println("a="+a)
		System.out.println("b="+b)
	}

	def optional(a : int, b : char='c', c : String) {
		System.out.println("a="+a)
		System.out.println("b="+b)
		System.out.println("c="+c)
	}

	def optionalAndVarargs(a : int, b : char='c', c : String*) {
		System.out.println("a="+a)
		System.out.println("b="+b)
		System.out.println("c="+c)
	}

}
