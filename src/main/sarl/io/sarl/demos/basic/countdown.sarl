package io.sarl.demos.basic

import io.sarl.core.Initialize
import io.sarl.core.Destroy
import io.sarl.core.ContextJoined
import io.sarl.core.ContextLeft

import io.sarl.core.Lifecycle
import io.sarl.core.Schedules
import java.util.concurrent.atomic.AtomicInteger

/*
 * A "Hello World" Agent.
 */
agent CountDownAgent{
	
	uses Lifecycle, Schedules
	
	val counter = new AtomicInteger(5)
	
	/* Print "Hello World" when spawned and wait 2 seconds are kill itself */
	on Initialize {
		System.out.println("Hello World!")
		every(1000)[
			System.out.println("Wake up!")
		]
		every(2000)[
			var v = counter.decrementAndGet;
			System.out.println("Counter="+v)
			if (v<=0)
				killMe
		]
	} 
	
	/* Print "Goodbye World" before dying */
	on Destroy {
		System.out.println("Goodbye World!")
	}
	
	on ContextJoined {
		System.out.println("Agent joined the context: "+occurrence.holonContextID);
		System.out.println("----- with default space: "+occurrence.defaultSpaceID);
	}

	on ContextLeft {
		System.out.println("Agent exited from the context: "+occurrence.holonContextID);
	}

}