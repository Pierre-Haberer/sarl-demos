package io.sarl.demos.factorial

import io.sarl.core.Behaviors
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle

event Factorial {
	var number : Integer
	var value : Integer
} 

event Calculate { 
	var number : Integer 
} 

agent FactorialAgent {
	var upto : Integer = 5 
	uses Lifecycle, Behaviors 
	  
	on Initialize {
		this.upto  = new Integer(occurrence.parameters.get(0) as String) 
		println("Received Calculate for " + this.upto)   
		wake(new Factorial => [ number = 0 ; value = 1 ])
	} 

	on Factorial [ occurrence.number < upto ] {
		wake(new Factorial => [ number = occurrence.number + 1 ; value = occurrence.value * (occurrence.number+1) ])
	}

	on Factorial [ occurrence.number == upto ] {  
		println("Fatorial of " + upto + " is " + occurrence.value)
		
		killMe
	}
}

